<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link href="<%= asset_path 'application.tailwind.css' %>" rel="stylesheet">
  <title>Enter / Edit Spends - MoneyMap</title>
  <style>
    body {
      background-color: #f3f4f6;
      min-height: 100vh;
    }

    .sidebar {
    background-color: white;
    box-shadow: 2px 0 5px rgba(0, 0, 0, 0.1);
    padding: 20px;
    position: fixed;
    top: 70px;
    left: 0;
    height: calc(100vh - 70px);
    display: flex;
    flex-direction: column;
    width: 260px;
  }
  .sidebar a {
    display: block;
    padding: 15px;
    margin-bottom: 10px;
    font-size: 1rem;
    color: #374151;
    text-decoration: none;
    border-radius: 5px;
  }

  .sidebar a.active, .sidebar a:hover {
    background-color: rgb(126, 220, 151);
    color: white;
  }

  .content {
  margin-left: 270px;
    padding: inherit;
    padding-top: 4rem;
    width: calc(100% - 20px);
    margin-top: 60px;
  
  }
    
    header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      background-color: white;
      box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
      padding: 1rem 2rem;
      width: 100%;
      position: fixed;
      top: 0;
      left: 0;
      z-index: 50;
    }
    
    .logo-container img {
      height: 3rem;
    }
    .logo-container {
      display: flex;
      align-items: center;
    }
  
    .profile-container {
      display: flex;
      align-items: center;
    }
    
    .profile-icon {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      background-color: #ccc;
      display: flex;
      align-items: center;
      justify-content: center;
      margin-right: 10px;
      cursor: pointer;
    }
    
    .logout {
      font-size: 1rem;
      color:rgb(255, 73, 73);
      text-decoration: none;
      font-weight: bold;
      cursor: pointer;
    }
    .logout:hover {
      text-decoration: none;
      cursor: pointer;
    }
    
    .logout {
      font-size: 1rem;
      color: #EF4444;
      text-decoration: none;
      font-weight: 600;
      padding: 0.5rem 1rem;
      border-radius: 0.375rem;
      transition: all 0.3s ease;
    }
    
    .logout:hover {
      color: white;
      background-color: #EF4444;
    }

  

    .form-container {
      background-color: white;
      padding: 1rem;
      border-radius: 1rem;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .back-button {
      display: inline-flex;
      align-items: center;
      padding: 0.5rem 1rem;
      background-color: #E5E7EB;
      color: #374151;
      border-radius: 0.5rem;
      transition: all 0.3s ease;
          margin: 1rem;
    }

    .back-button:hover {
      background-color: #D1D5DB;
    }

    .expense-entry {
      display: flex;
      gap: 0.5rem;
      margin-bottom: 0.5rem;
    }

    .add-expense-btn {
      background-color: #3B82F6;
      color: white;
      padding: 0.4rem 1rem;
      border-radius: 0.5rem;
      transition: all 0.3s ease;
    }

    .add-expense-btn:hover {
      background-color: #2563EB;
    }

    .save-btn {
      background-color: #10B981;
      color: white;
      padding: 0.4rem 1rem;
      border-radius: 0.5rem;
      transition: all 0.3s ease;
    }

    .save-btn:hover {
      background-color: #059669;
    }

    .remove-expense {
      background-color: #ff6363;
    color: white;
    width: 2rem;
    height: 2rem;
    display: flex
;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
    transition: all 0.3s ease;
    }

    .remove-expense:hover {
      background-color: #DC2626;
    }

    .imput {
      background-color:rgb(240, 240, 240);
      padding: 0.5rem 1rem;
    }

        .toast {
      position: fixed;
      top: 20px;
      left: 50%;
      transform: translateX(-50%);
      padding: 10px 20px;
      border-radius: 5px;
      z-index: 100; /* Ensure it's on top */
      opacity: 0; /* Initially hidden */
      transition: opacity 0.5s ease, transform 0.3s ease; /* Smooth transitions */
    }

    .toast.success {
      background-color: #4CAF50; /* Green */
      color: white;
    }

    .toast.error {
      background-color: #F44336; /* Red */
      color: white;
    }

    .toast.show {
      opacity: 1;
      transform: translateX(-50%) translateY(20px); /* Move down slightly when shown */
    }

  </style>
</head>

<body class="bg-gray-100 flex min-h-screen">
  <header>
    <div class="logo-container">
      <%= image_tag "money_map.png", alt: "MoneyMap Logo" %>
    </div>
    <div class="profile-container">
     <button class="profile-container">
      <%= link_to "üë§", profile_path, method: :delete, class: "profile-icon" %>
     </button>
      <nav>
        <button><%= link_to "Log Out", signin_path, method: :delete, class: "logout" %></button>
      </nav>
    </div>
  </header>
  
    <!-- Sidebar -->
 <aside class="sidebar">
  <%= link_to "Dashboard", dashboard_path, class: "#{current_page?(dashboard_path) ? 'active' : ''}" %>
  <%= link_to "Enter / Edit Spends", expenses_path, class: "#{current_page?(expenses_path) ? 'active' : ''}" %>
  <a href="#">Saving Goals</a>
  <a href="#">Dynamic Budget Allocator</a>
</aside>
  <!-- Main Content -->

  <main class="content">
    <%# Toast Notification %>
    <% if notice || alert %>
      <div class="toast <%= notice ? 'success' : 'error' %> show">
        <%= notice || alert %>
      </div>
    <% end %>

    <div class="p-6 max-w-4xl mx-auto bg-white rounded-2xl shadow-lg">
      <button onclick="window.location.href='<%= dashboard_path %>'" class="back-button">
        ‚Üê Back to Dashboard
      </button>

      <div class="form-container">
        <h2 class="text-2xl font-semibold mb-4">Enter / Edit Spends</h2>

<%= form_with(url: expenses_path, method: :post, local: true, id: "expense-form") do |f| %>
  <!-- Year Selection -->
  <div class="mb-4">
    <label>Year: </label>
    <%= select_tag :year, 
        options_for_select((2024..2030).to_a, selected: params[:year]),
        class: "imput rounded-lg",
        onchange: "updateMonth()" %>
  </div>

  <!-- Month Selection -->
  <div class="mb-4">
  <label>Month: </label>
  <%= select_tag :month, 
      options_for_select(Date::MONTHNAMES.compact, selected: params[:month]),
      class: "imput rounded-lg",
      onchange: "loadExistingData()" %>
    </div>
  <!-- Income Field -->
  <div class="mb-4">
    <label>Income: </label>
    <%= number_field_tag :income, @income_value,
        class: "imput rounded-lg",
        
        step: 0.01 %>
  </div>

  <!-- Expenses Container -->
  <div id="expenses-container">
    <div class="expense-entry">
      <%= select_tag "expense[category][]", 
          options_for_select(["Rent", "Food", "Entertainment", "Utilities", "Other"]), 
          class: "w-1/2 p-2 imput rounded-lg",
          required: true %>
      <%= number_field_tag "expense[amount][]", 
          nil, 
          placeholder: "Amount", 
          class: "w-1/2 p-2 imput rounded-lg", 
          required: true,
          step: 0.01 %>
      <button type="button" class="remove-expense">X</button>
    </div>
  </div>

  <button type="button" id="add-expense" class="add-expense-btn">Add More</button>
  <%= f.submit "Save", class: "save-btn" %>
<% end %>
      </div>
    </div>
  </main>

<script>
document.addEventListener("DOMContentLoaded", function() {
  // Add change listeners to both year and month
  const yearSelect = document.querySelector("select[name='year']");
  const monthSelect = document.querySelector("select[name='month']");
  
  if (yearSelect && monthSelect) {
    yearSelect.addEventListener('change', loadExistingData);
    monthSelect.addEventListener('change', loadExistingData);
  }

  // Add/Remove expense rows
  document.getElementById("add-expense").addEventListener("click", function() {
    const container = document.getElementById("expenses-container");
    const newRow = document.createElement("div");
    newRow.classList.add("expense-entry");
    newRow.innerHTML = `
      <select name="expense[category][]" class="w-1/2 p-2 imput rounded-lg" required>
        <option value="Rent">Rent</option>
        <option value="Food">Food</option>
        <option value="Entertainment">Entertainment</option>
        <option value="Utilities">Utilities</option>
        <option value="Other">Other</option>
      </select>
      <input type="number" name="expense[amount][]" 
             class="w-1/2 p-2 imput rounded-lg" 
             required step="0.01">
      <button type="button" class="remove-expense">X</button>
    `;
    container.appendChild(newRow);
  });

  document.addEventListener("click", function(e) {
    if (e.target.classList.contains("remove-expense")) {
      if (document.querySelectorAll(".expense-entry").length > 1) {
        e.target.closest(".expense-entry").remove();
      }
    }
  });

  // Auto-hide toast after 3 seconds
  const toast = document.querySelector('.toast');
  if (toast) {
    setTimeout(() => {
      toast.classList.remove('show');
    }, 3000);
  }
});

function loadExistingData() {
  const year = document.querySelector("select[name='year']").value;
  const month = document.querySelector("select[name='month']").value;
  
  if (year && month) {
    fetch(`/expenses/show?year=${year}&month=${month}`)
      .then(response => response.json())
      .then(data => {
        // Populate income
        document.querySelector("input[name='income']").value = data.income || 0;
        
        // Populate expenses
        const container = document.getElementById("expenses-container");
        container.innerHTML = '';
        
        if (data.expenses?.length > 0) {
          data.expenses.forEach(expense => {
            const newRow = document.createElement("div");
            newRow.classList.add("expense-entry");
            newRow.innerHTML = `
              <select name="expense[category][]" class="w-1/2 p-2 imput rounded-lg" required>
                ${['Rent','Food','Entertainment','Utilities','Other'].map(opt => 
                  `<option value="${opt}" ${expense.category === opt ? 'selected' : ''}>${opt}</option>`
                ).join('')}
              </select>
              <input type="number" name="expense[amount][]" 
                     value="${expense.amount_spent}"
                     class="w-1/2 p-2 imput rounded-lg" 
                     required step="0.01">
              <button type="button" class="remove-expense">X</button>
            `;
            container.appendChild(newRow);
          });
        } else {
          // Add default empty row
          container.innerHTML = `
            <div class="expense-entry">
              <select name="expense[category][]" class="w-1/2 p-2 imput rounded-lg" required>
                ${['Rent','Food','Entertainment','Utilities','Other'].map(opt => 
                  `<option value="${opt}">${opt}</option>`
                ).join('')}
              </select>
              <input type="number" name="expense[amount][]" 
                     class="w-1/2 p-2 imput rounded-lg" 
                     required step="0.01">
              <button type="button" class="remove-expense">X</button>
            </div>
          `;
        }
      });
  }
}
</script>
</body>
</html>